{"version":3,"sources":["Alert.js","Navbar.js","TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","message","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aboutText","onClick","RedTheme","BlueTheme","GreenTheme","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","console","log","target","rows","newTxt","showAlert","txt","split","i","length","UpdatedCase","join","trim","App","setMode","_useState3","_useState4","setAlert","setTimeout","document","body","style","backgroundColor","getElementById","color","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7a4efccd.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Alertstyle.css\"\n\nexport default function Alert(props) {\n    const capitalize = (message)=> {\n        let lower = message.toLowerCase();\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\n    }\n  return (\n   props.alert && \n   <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n  <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\n \n</div>\n\n  )\n}\n","import React from 'react'\n// import PropTypes from 'prop-types'\nimport \"./Navstyle.css\";\nimport {\n  // withRouter,\n  // Link\n} from \"react-router-dom\";\n\n\n\nexport default function Navbar(props) {\n  // let mystyle= {\n  //   display: \"flex\",\n  \n  // }\n  \n    return (\n        <nav className={`navbar navbar-expand-lg bg-${props.mode} text-${props.mode==='light'?'dark':'light'}`}>\n  <div className=\"container-fluid\" >\n    <a className={`navbar-brand text-${props.mode==='light'?'dark':'light'}`} href=\"/\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className={`nav-Link active\" aria-current=\"page  text-${props.mode==='light'?'dark':'light'}`} href=\"/\">Home</a>\n        </li>\n        <li className=\"nav-item\">\n          <a className={`nav-Link active\" aria-current=\"page  text-${props.mode==='light'?'dark':'light'}`} href=\"/about\">{props.aboutText}</a>\n        </li>\n        \n          </ul >\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\n           <span> Choose Theme: </span>\n  <button type=\"button\" className=\"btn\" id=\"rTheme\" onClick={props.RedTheme}></button>\n  <button type=\"button\" className=\"btn\" id='bTheme' onClick={props.BlueTheme}></button>\n  <button type=\"button\" className=\"btn\" id='gTheme' onClick={props.GreenTheme}></button>\n</div>\n\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\n</div>\n    </div>\n  </div>\n  \n</nav>\n    )\n// }\n// Navbar.propTypes = {\n//     title: PropTypes.string.isRequired,\n//     aboutText: PropTypes.string.isRequired\n// }\n// Navbar.defaultProps= {\n//     title: \"This is title\",\n//     aboutText: \"about Text\"\n}","import React, {useState} from 'react'\n\n\nexport default function TextForm(props) {\n    const handleUpclick= ()=>{\n        // console.log(\"Upper case was clicked\");\n        let newTxt= text.toUpperCase();\n        setText(newTxt);\n        props.showAlert(\"Converted to upper case\", \"success\");\n    }\n    const handleClearClick= ()=>{\n        // console.log(\"Upper case was clicked\");\n        let newTxt= \"\"\n        setText(newTxt);\n        props.showAlert(\"Text Cleared\", \"success\");\n    }\n    const handleLoclick= ()=>{\n        // console.log(\"Upper case was clicked\"); \n        let newTxt= text.toLowerCase();\n        setText(newTxt);\n        props.showAlert(\"Converted to lower case\", \"success\");\n    }\n    const handleOnChange= (event)=>{\n        console.log(\"OnChange\");\n        setText(event.target.value);\n    }\n    const CapitalFirst= ()=>{\n      let txt = text.split(\".\");\n      // console.log(txt)\n      for(let i=0;i<txt.length;i++) {\n        // console.log(txt[i].charAt(0))\n       txt[i] = txt[i].charAt(0).toUpperCase() + txt[i].slice(1);\n      //  console.log(txt[i])\n      props.showAlert(\"Converted first letter of sentence capital\", \"success\");\n      }\n      let UpdatedCase= txt.join(\".\") \n      // console.log(UpdatedCase)\n      setText(UpdatedCase);\n\n    }\n  \n\n    const [text, setText] = useState(\"\");\n  return (\n    <>\n    <div className=\"container\">\n    <div className='my-3'>\n  <div> \n    <h1 id='mainHead'> {props.heading} </h1>\n  </div>\n<div className=\"mb-3\">\n  {/* {console.log(props.mode)}\n  {console.log(\"a\")} */}\n  <textarea className=\"form-control\"  value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\n</div>\n<button className=\"btn btn-primary mx-1\" onClick={handleUpclick}> Change to Uppercase</button>\n<button className=\"btn btn-primary mx-1\" onClick={handleLoclick}> Change to Lowercase</button>\n<button className=\"btn btn-primary mx-1\" onClick={handleClearClick}> Clear Text</button>\n<button className=\"btn btn-primary mx-1\" onClick={CapitalFirst}>Capitalize First</button>\n    </div>\n    </div>\n    <div className=\"container\">\n        <h3>Your text summary</h3>\n        <p> {text.length>0?text.trim().split(\" \").length:0} Words and {text.length} Characters</p>\n        <p>{0.008*text.split(\" \").length} minutes read </p>\n        <h2>Preview</h2>\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\n    \n    </div>\n    </>\n\n  )\n}\n","\nimport React, { useState } from 'react';\nimport Alert from './Alert';\n// import About from './About';\nimport './App.css';\nimport Navbar from './Navbar';\nimport TextForm from './TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link,\n//   // withRouter\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode,setMode]= useState(\"light\")\n  const [alert,setAlert]= useState(null)\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout( ()=> {\n      setAlert(null)\n  }, 1500);\n  }\n  // document.getElementById(\"exampleFormControlTextarea1\").style.color = 'white';\n  const toggleMode= ()=>{\n    if(mode !== \"dark\") {\n      setMode(\"dark\");\n      showAlert(\"Enabled dark mode\", \"success\");\n      document.body.style.backgroundColor = 'black';\n      document.getElementById(\"exampleFormControlTextarea1\").style.backgroundColor = 'black';\n      document.body.style.color= \"white\"\n      document.getElementById(\"exampleFormControlTextarea1\").style.color = 'white';\n      // document.title=\"TextUtils - Dark Mode\"\n      // setInterval(() => {\n      //   document.title= \"TextUtils is amazing\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title= \"Install TextUtils Now\"\n      // }, 1500);\n\n\n    }\n    else {\n      setMode(\"light\");\n      showAlert(\"Enabled light mode\", \"success\");\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color= \"black\"\n      document.getElementById(\"exampleFormControlTextarea1\").style.backgroundColor = 'white';\n      document.getElementById(\"exampleFormControlTextarea1\").style.color = 'black';\n      // document.title=\"TextUtils - Light Mode\"\n      \n    }\n  }\n  const RedTheme = ()=> {\n    if(mode !== 'red') {\n      setMode(\"red\");\n      showAlert(\"Enabled red mode\", \"success\");\n      document.body.style.backgroundColor = '#4d1a00';\n      document.getElementById(\"exampleFormControlTextarea1\").style.backgroundColor = '#4d1a00';\n      document.body.style.color= \"white\"\n      document.getElementById(\"exampleFormControlTextarea1\").style.color = 'white';\n    }\n    else {\n      setMode(\"light\");\n      showAlert(\"Enabled light mode\", \"success\");\n      document.body.style.backgroundColor = 'white';\n      document.getElementById(\"exampleFormControlTextarea1\").style.backgroundColor = 'white';\n      document.body.style.color= \"black\"\n      document.getElementById(\"exampleFormControlTextarea1\").style.color = 'black';\n    }\n  }\n  const BlueTheme = ()=> {\n    if(mode !== 'blue') {\n      setMode(\"blue\");\n      showAlert(\"Enabled blue mode\", \"success\");\n      document.body.style.backgroundColor = '#001a33';\n      document.getElementById(\"exampleFormControlTextarea1\").style.backgroundColor = '#001a33';\n      document.body.style.color= \"white\"\n      document.getElementById(\"exampleFormControlTextarea1\").style.color = 'white';\n      \n      \n    }\n    else {\n      setMode(\"light\");\n      showAlert(\"Enabled light mode\", \"success\");\n      document.body.style.backgroundColor = 'white';\n      document.getElementById(\"exampleFormControlTextarea1\").style.backgroundColor = 'white';\n      document.body.style.color= \"black\"\n      document.getElementById(\"exampleFormControlTextarea1\").style.color = 'black';\n\n    }\n  }\n  const GreenTheme = ()=> {\n    if(mode !== 'green') {\n      setMode(\"green\");\n      showAlert(\"Enabled green mode\", \"success\");\n      document.body.style.backgroundColor = '#003300';\n      document.getElementById(\"exampleFormControlTextarea1\").style.backgroundColor = '#003300';\n      document.body.style.color= \"white\"\n      document.getElementById(\"exampleFormControlTextarea1\").style.color = 'white';\n      \n    }\n    else {\n      setMode(\"light\");\n      showAlert(\"Enabled light mode\", \"success\");\n      document.body.style.backgroundColor = 'white';\n      document.getElementById(\"exampleFormControlTextarea1\").style.backgroundColor = 'white';\n      document.body.style.color= \"black\"\n      document.getElementById(\"exampleFormControlTextarea1\").style.color = 'black';\n    }\n  }\n\n\n  \n\n  \n  // document.body.style.backgroundColor= mode==='red'?'red':'black';\n  \n  return (\n   <div>\n   {/* <Router> */}\n    <Navbar title= \"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} RedTheme={RedTheme} BlueTheme={BlueTheme} GreenTheme={GreenTheme} />\n    <Alert alert={alert} />\n    <div className=\"container my-3\" >\n    {/* <Switch>\n          <Route path=\"/about\">\n            \n            <About />\n          </Route>\n          <Route path=\"/\"> */}\n          \n    < TextForm heading= \"Enter your text to analyse below\" mode={mode} toggleMode={toggleMode} showAlert={showAlert} RedTheme={RedTheme} />\n    \n  \n          {/* </Route> \n        </Switch> */}\n        </div> \n  \n\n    \n\n    {/* </Router> */}\n    </div>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}